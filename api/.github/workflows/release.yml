name: Build and deploy to production server

on:
  pull_request:
    types: [closed]
    branches:
      - deployment/production

jobs:
  build_docker_images:
    name: Build docker images
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Copy environment variables and dockerfile file for production
        run: cp environments/production/.env .env && cp environments/production/Dockerfile.deploy Dockerfile

      - name: Copy .ebextensions folder for production
        run: cp -r environments/production/.ebextensions .ebextensions

      - name: Copy docker-compose file for production
        run: cp environments/production/docker-compose.deploy.yml docker-compose.yml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: api-production-genie
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Zip docker-compose file .env file and .ebextensions folder
        run: zip compose.zip docker-compose.yml .env .ebextensions

      - name: Get timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%s')"

      - name: Deploy to production backend EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_PRODUCTION_APP}}
          environment_name: ${{ secrets.EB_PRODUCTION_ENV }}
          version_label: ${{steps.timestamp.outputs.timestamp}}
          region: ${{ secrets.EB_PRODUCTION_REG }}
          deployment_package: compose.zip

      - name: Success message
        run: echo "Successfully deployed to production environment"
